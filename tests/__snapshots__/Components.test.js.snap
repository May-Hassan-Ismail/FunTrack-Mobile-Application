// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CheckDay /> should match snapshot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFBEBE",
      "borderRadius": 10,
      "justifyContent": "center",
      "margin": 5,
      "padding": 10,
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "black",
          "fontFamily": "Skranji_700Bold",
          "fontSize": 20,
        }
      }
    >
       How was your day? 
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-around",
        "minHeight": 50,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontFamily": "Skranji_700Bold",
            "fontSize": 20,
          }
        }
      >
         1 
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontFamily": "Skranji_700Bold",
            "fontSize": 20,
          }
        }
      >
         2 
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontFamily": "Skranji_700Bold",
            "fontSize": 20,
          }
        }
      >
         3 
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontFamily": "Skranji_700Bold",
            "fontSize": 20,
          }
        }
      >
         4 
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "black",
            "fontFamily": "Skranji_700Bold",
            "fontSize": 20,
          }
        }
      >
         5 
      </Text>
    </View>
  </View>
  <View>
    <Text
      style={
        Object {
          "color": "black",
          "fontWeight": "bold",
          "marginHorizontal": "34%",
        }
      }
    >
       5 is Excellent! 
    </Text>
  </View>
</View>
`;

exports[`<CheckReminder /> should match snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "space-around",
      "width": "90%",
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       on the 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       day 
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       1 day 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       early 
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       2 days 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       early 
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       3 days 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       early 
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderRadius": 60,
        "height": 60,
        "justifyContent": "center",
        "opacity": 1,
        "width": 60,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       1 week 
    </Text>
    <Text
      style={
        Object {
          "fontSize": 14,
          "fontWeight": "bold",
        }
      }
    >
       early 
    </Text>
  </View>
</View>
`;

exports[`<Footer /> should match snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#206B6B",
      "bottom": 0,
      "flexDirection": "row",
      "height": 97.38199999999999,
      "justifyContent": "space-around",
      "position": "absolute",
      "width": "100%",
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text />
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text />
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text />
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text />
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text />
  </View>
</View>
`;

exports[`<List /> should match snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "borderRadius": 10,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "margin": 5,
        "padding": 15,
      },
      Object {
        "backgroundColor": "red",
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text />
    <Text
      style={
        Object {
          "maxWidth": "85%",
          "paddingHorizontal": 5,
        }
      }
    >
       
      test
       
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginRight": "7%",
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;

exports[`<Task /> should match snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 2,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "margin": 3,
      "padding": 6,
    }
  }
>
  <View
    style={
      Object {
        "flex": 3,
        "flexDirection": "column",
        "flexWrap": "wrap",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": 0,
            "disabled": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderColor": "#657786",
              "borderRadius": 2,
              "borderWidth": 2,
              "height": 20,
              "width": 20,
            },
            undefined,
            0,
            false,
            undefined,
            0,
          ]
        }
      >
        0
      </View>
      <Text
        style={
          Object {
            "paddingHorizontal": 5,
          }
        }
      >
         
        test
         
      </Text>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "paddingHorizontal": 5,
          }
        }
      >
         
        Jul 29
         
      </Text>
      <Text
        style={
          Object {
            "paddingHorizontal": 5,
          }
        }
      >
         
        00:20
         
      </Text>
      <Text />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "marginHorizontal": "7%",
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
</View>
`;
